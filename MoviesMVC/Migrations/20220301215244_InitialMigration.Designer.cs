// <auto-generated />
using System;
using L08HandsOnASPNetDB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace L08HandsOnASPNetDB.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20220301215244_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("L08HandsOnASPNetDB.Models.Movie", b =>
                {
                    b.Property<long>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MovieImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("MovieTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("MovieURL")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("L08HandsOnASPNetDB.Models.WatchedMovie", b =>
                {
                    b.Property<long>("WatchedMovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("WatchedMovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("WatchedMovies");
                });

            modelBuilder.Entity("L08HandsOnASPNetDB.Models.WatchedMovie", b =>
                {
                    b.HasOne("L08HandsOnASPNetDB.Models.Movie", "Movie")
                        .WithMany("watchedMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("L08HandsOnASPNetDB.Models.Movie", b =>
                {
                    b.Navigation("watchedMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
